version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "poetry run python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/drf_project
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env

  db:
    image: postgres
    env_file:
      - ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER' ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
#    ports:
#    - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  celery:
    build: .
    command:
      poetry run celery -A config worker -l INFO --concurrency=500 --pool=gevent
    restart: on-failure
    volumes:
      - .:/drf_project
    depends_on:
      - redis
      - db
    env_file:
      - ./.env

  celery-beat:
    build: .
    command:
      poetry run celery -A config beat --loglevel=info
    restart: on-failure
    volumes:
      - .:/drf_project
    depends_on:
      - redis
      - db
    env_file:
      - ./.env


volumes:
  pg_data:
  static_volume:
  redis_data: