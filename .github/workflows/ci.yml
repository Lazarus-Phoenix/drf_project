name: Django CI

on:
  push:
    branches: [ "feature2" ]
  pull_request:
    branches: [ "feature2" ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .

  tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test
        env:
          SECRET_KEY: test_secret_key


  build:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          touch .env
          echo '"${{ secrets.ENV_FILE }}"' | sed "s/\"//g" > .env

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set up Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/drf_project:${{ github.sha }} .

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/drf_project:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << "EOF"
          docker pull ${{ secrets.DOCKER_USERNAME }}/drf_project:${{ github.sha }}
          docker stop drf_project || true
          docker rm drf_project || true
          docker run -d --name drf_project -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/drf_project:${{ github.sha }}
          EOF