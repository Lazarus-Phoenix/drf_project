version: "3.9"

services:
  drf_project:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "poetry run python manage.py collectstatic --noinput && poetry run gunicorn drf_project.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/drf_project
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:16-alpine
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER' ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:alpine
    ports:
    - "6379:6379"

  celery:
    build: .
    command:
      poetry run celery -A drf_project worker -l INFO --concurrency=500 --pool=gevent
    restart: on-failure
    volumes:
      - .:/drf_project
    depends_on:
      - redis
      - db
    env_file:
      - .env

  celery-beat:
    build: .
    command:
      poetry run celery -A -A drf_project beat --loglevel=info
    restart: on-failure
    volumes:
      - .:/drf_project
    depends_on:
      - redis
      - db
    env_file:
      - .env


volumes:
  pg_data: